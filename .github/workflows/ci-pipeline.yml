name: CI Pipeline


on:
  pull_request:
    branches: [ "main" ]


env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    TAG: latest
    VERSION: v1.10.1
  
permissions:
   contents: read
  
jobs:
    build_code:
      name: 'Code Build'
      runs-on: ubuntu-latest
  
      steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
  
      # Set Pyhton environment
      - name: Set up Node 14
        uses: actions/setup-node@v3
        with:
            node-version: '14'        
      
      # Install dependencies
      - name: Clean & Install dependencies
        run: npm ci
  
      # Lint code
      - name: Lint Code
        run: npm run lint
  
      # Code Format using Prettier        
      - name: Code Format (Prettier)
        run: npm run prettier

      # Unit Test        
      - name: Unit Testing (Jest)
        run: npm test        

      # Production build distribution folder       
      - name: Build the code
        run: npm run build           
  
    build-and-push-image:
      needs: [build_code]
      name: 'Build and Push Docker Image'    
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
  
      steps:
      # Checking out the code
      - name: Checkout repository
        uses: actions/checkout@v3
  
      # Login into Container GitHub Registry Package Manager  
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      # Building the Docker image and tag    
      - name: Build and tag image
        run: docker build -t "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" -t "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" .
  
      # Push to GitHub Registry  
      - name: Push to GitHub Registry
        run: docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}   
